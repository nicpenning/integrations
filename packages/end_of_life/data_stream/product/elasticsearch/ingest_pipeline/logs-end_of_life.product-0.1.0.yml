---
description: Pipeline for parsing the End of Life Products
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      allow_duplicates: false
      field: tags
      value: preserve_original_event
  - append:
      field: error.message
      value: '{{{ _ingest.on_failure_message }}}'
processors:
  - set:
      field: ecs.version
      value: 9.1.0
  - fail:
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      message: error message set and no data to process.
      tag: data_collection_error
  - set:
      field: event.kind
      value: enrichment
  - set:
      field: event.category
      value:
        - vulnerability
  - set:
      field: event.type
      value:
        - info
  - date:
      field: end_of_life.release.eoasFrom
      formats:
        - YYYY-MM-DD
      if: ctx.end_of_life.release?.eoasFrom != null
      target_field: end_of_life.release.eoasFrom
  - date:
      field: end_of_life.release.eolFrom
      formats:
        - YYYY-MM-DD
      if: ctx.end_of_life.release?.eolFrom != null
      target_field: end_of_life.release.eolFrom
  - date:
      field: end_of_life.release.latest.date
      formats:
        - YYYY-MM-DD
      if: ctx.end_of_life.release?.latest?.date != null
      target_field: end_of_life.release.latest.date
  - date:
      field: end_of_life.release.releaseDate
      formats:
        - YYYY-MM-DD
      if: ctx.end_of_life.release?.releaseDate != null
      target_field: end_of_life.release.releaseDate
  - rename:
      field: message
      if: ctx.event?.original == null
      ignore_missing: true
      target_field: event.original
  - script:
      description: Remove null/empty values recursively.
      lang: painless
      on_failure:
        - append:
            field: error.message
            value: fail-{{{ _ingest.on_failure_processor_tag }}}
        - fail:
            message: 'Processor {{{ _ingest.on_failure_processor_type }}} with tag {{{ _ingest.on_failure_processor_tag }}} in pipeline {{{ _ingest.on_failure_pipeline }}} failed with message: {{{ _ingest.on_failure_message }}}'
      source: |-
        boolean drop(Object o) {
          if (o == null || o == '') {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
      tag: Remove null/empty values recursively.
  - pipeline:
      description: '[Fleet] Global pipeline for all data streams'
      ignore_missing_pipeline: true
      name: global@custom
  - pipeline:
      description: '[Fleet] Pipeline for all data streams of type `logs`'
      ignore_missing_pipeline: true
      name: logs@custom
  - pipeline:
      description: '[Fleet] Pipeline for all data streams of type `logs` defined by the `end_of_life` integration'
      ignore_missing_pipeline: true
      name: logs-end_of_life.integration@custom
  - pipeline:
      description: '[Fleet] Pipeline for the `end_of_life.product` dataset'
      ignore_missing_pipeline: true
      name: logs-end_of_life.product@custom
